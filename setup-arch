#!/usr/bin/env bash

#
# Gary's arch linux installer script
#
# Note: This assumes you already have a minimal install already
# and you have internet connectivity
#
#   Usage:  setup-arch <DE> <OPTIMUS/Y/N>
#    e.g.  ./setup-arch gnome Y
#


echo Installing arch with desktop environment: $1
sudo systemctl enable --now NetworkManager
sleep 2 

# Get the latest package keys for pacman
sudo pacman-key --populate
sudo pacman -Suy --noconfirm

mkdir -p /tmp/aur

# This function just gets a specific aur package and installs it
# Files are in the tmp folder so cleaned up after reboot
function aurinst {
	echo Installing aur package $1
	if [ -d /tmp/aur/$1 ]; then
		rm -rf /tmp/aur/$1
	fi
	cd /tmp/aur && git clone https://aur.archlinux.org/$1.git && cd $1 && yes | makepkg -sic --needed
	rm -rf /tmp/aur/$1 
}

sudo pacman -S --noconfirm --needed dmidecode reflector
sudo systemctl enable --now reflector

PLATFORM=$(sudo dmidecode -s system-manufacturer)
GPU=$(lspci | grep -i '.* vga .* nvidia .*')
shopt -s nocasematch

if [[ $GPU == *' nvidia '* ]]; then
  printf 'Nvidia GPU is present:  %s\n' "$gpu"
  sudo pacman -S --noconfirm --needed nvidia nvidia-settings
fi

echo Platform: $PLATFORM

# Install Xorg and hardware drivers
sudo pacman -S --noconfirm --needed xorg xorg-xinit tlp dmidecode xdg-utils intltool linux-headers acpi_call \
	                            acpid fwupd libva-mesa-driver mesa-vdpau mesa vulkan-mesa-layers vulkan-radeon lshw fprintd

# Install Audio Stack
sudo pacman -S --noconfirm --needed pavucontrol pipewire pipewire-pulse pipewire-jack pipewire-alsa cmus

# Install Bluetooth Stack
if [ "$PLATFORM" != "QEMU" ]; then
sudo pacman -S --noconfirm --needed bluez blueman
sudo systemctl enable --now bluetooth.service
sudo sed -i 's/\#Experimental\ \=\ false/Experimental\ =\ true/g' /etc/bluetooth/main.conf
fi

# Install Network Stack
sudo pacman -S --noconfirm --needed wpa_supplicant dnsmasq openresolv nss-mdns wireguard-tools ufw openvpn networkmanager-openvpn openssh libxcrypt-compat samba dnsutils nfs-utils modemmanager

# Install Print Services
sudo pacman -S --noconfirm --needed cups cups-pdf
sudo systemctl enable --now cups.socket

# Install Fonts
echo "Install fonts:"
sudo pacman -S --noconfirm --needed \
        ttf-ibm-plex ttf-liberation ttf-dejavu xorg-fonts-misc xorg-fonts-type1 \
        noto-fonts noto-fonts-extra noto-fonts-emoji ttf-carlito ttf-croscore ttf-hack ttf-anonymous-pro \
        ttf-droid ttf-fira-code ttf-fira-mono ttf-fira-sans ttf-font-awesome ttf-jetbrains-mono \
        ttf-opensans ttf-roboto-mono ttf-roboto ttf-ubuntu-font-family ttf-inconsolata texlive-fontsextra 

# Install Applications
sudo pacman -S --noconfirm --needed wget sudo neofetch mc htop flatpak rsync curl sshfs tree xterm git ncdu borg python-llfuse 

# Install standard applications
sudo pacman -S --noconfirm --needed firefox thunderbird libreoffice thunderbird gimp keepassxc android-file-transfer

sleep 4

if [ "$PLATFORM" == "QEMU" ]; then
sudo pacman -S --noconfirm --needed spice-vdagent
sudo systemctl enable spice-vdagentd
fi


# Add rule for printing by users
sudo touch /etc/polkit-1/rules.d/49-allow-passwordless-printer-admin.rules
sudo bash -c 'cat << EOF > /etc/polkit-1/rules.d/49-allow-passwordless-printer-admin.rules
polkit.addRule(function(action, subject) { 
    if (action.id == "org.opensuse.cupspkhelper.mechanism.all-edit" && 
        subject.isInGroup("wheel")){ 
        return polkit.Result.YES; 
    } 
});
EOF'

# Add aurinst
sudo touch /usr/local/bin/aurinst
sudo bash -c 'cat << EOF > /usr/local/bin/aurinst
#!/usr/bin/env bash
PACKAGE=\$1

if [ \$# -eq 0 ]
then
	echo "No package proivided! Usage: aurinst <package>"
	exit 1
fi

echo Installing package \$PACKAGE

if [ -d /tmp/aur/\$PACKAGE ]; then
	sudo rm -rf /tmp/aur/\$PACKAGE
fi

mkdir -p /tmp/aur

cd /tmp/aur && git clone https://aur.archlinux.org/\$PACKAGE.git && cd \$PACKAGE && yes | makepkg -sic --needed
rm -rf /tmp/aur
EOF'
sudo chmod +x /usr/local/bin/aurinst

# Add intermediate ca cert
sudo touch /etc/ca-certificates/trust-source/anchors/b1-int.crt
sudo bash -c 'cat << EOF > /etc/ca-certificates/trust-source/anchors/b1-int.crt
-----BEGIN CERTIFICATE-----
MIIBxTCCAWugAwIBAgIRAOXhNfpes999inSG8vDHN9swCgYIKoZIzj0EAwIwLDEQ
MA4GA1UEChMHYm93ZXJzMTEYMBYGA1UEAxMPYm93ZXJzMSBSb290IENBMB4XDTIz
MTAxNzEwMTMxMVoXDTMzMTAxNDEwMTMxMVowNDEQMA4GA1UEChMHYm93ZXJzMTEg
MB4GA1UEAxMXYm93ZXJzMSBJbnRlcm1lZGlhdGUgQ0EwWTATBgcqhkjOPQIBBggq
hkjOPQMBBwNCAATRX7NovkKvA/yIgAMBhdcKZx3AmE/dQyI5RxmG5StH21HcCQ6p
MmxPc8de/ZsU6tMaS+m+77SnIxmJF6932mWXo2YwZDAOBgNVHQ8BAf8EBAMCAQYw
EgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUyY9w2vKv+/qTqR5a7t/aDYhD
1GYwHwYDVR0jBBgwFoAUmL0cS0h1Wgqceb33bULMKELW3zUwCgYIKoZIzj0EAwID
SAAwRQIgWlp024IxTnDtGuRTb4NKtP76e23P5NEMlaH5jYg6IhACIQDesnJxjvtU
NFj/moNHOw3Izna3lsVlTtCVtSnDDzjhmw==
-----END CERTIFICATE-----
EOF'
sudo update-ca-trust

# Fix mdns printing
sudo sed -i 's/hosts\:\ mymachines\ resolve\ \[\!UNAVAIL\=return\]\ files\ myhostname\ dns/hosts: mymachines mdns [NOTFOUND=return] resolve [!UNAVAIL=return] files myhostname dns/g' /etc/nsswitch.conf 

# install build tools
sudo pacman -S --noconfirm --needed cmake gi-docgen gtk-doc valgrind vala help2man umockdev noto-fonts-cjk python-pillow gnu-efi-libs

# install development and user tools
sudo pacman -S --noconfirm --needed tig byobu libxss python-setuptools mesa-demos yelp-tools check meson \
	                            gobject-introspection glxinfo python-dbus qemu-desktop virt-manager swtpm \
				    virt-viewer vde2 edk2-ovmf bridge-utils openbsd-netcat \
                                    python-dbusmock rust docker docker-buildx go typescript just libqalculate leafpad cmake
sudo usermod -aG docker $USER
sudo usermod -aG libvirt $USER

##### FIX USB COPY HANGING #####
sudo touch /etc/sysctl.d/99-sysctl.conf
sudo bash -c 'cat << EOF > /etc/sysctl.d/99-sysctl.conf
vm.dirty_bytes=50331648
vm.dirty_background_bytes=16777216
EOF'
################################

sudo systemctl enable --now avahi-daemon.service
sudo systemctl enable --now dnsmasq.service
#sudo systemctl enable --now ebtables.service
sudo systemctl enable --now libvirtd.service
sudo systemctl enable --now sshd.service
sudo systemctl enable --now ufw.service
sudo systemctl enable --now acpid.service

## TLP Setup
sudo systemctl mask systemd-rfkill.service
sudo systemctl mask systemd-rfkill.socket
sudo systemctl enable --now tlp


######## GNOME ########
if [ "$1" == "gnome" ]; then 
  echo "Installing $1"
  # Base Gnome Packages
  sudo pacman -S --noconfirm --needed gdm gnome-shell gnome-control-center gnome-backgrounds gnome-color-manager gnome-disk-utility gnome-terminal \
				      gnome-font-viewer gnome-menus gnome-remote-desktop gnome-screenshot gnome-shell-extensions mutter nautilus orca \
                                      dconf-editor eog system-config-printer gnome-connections gnome-user-share xdg-desktop-portal-gnome gnome-tweaks 

  sudo pacman -S --noconfirm --needed gnome-software gnome-system-monitor xdg-user-dirs-gtk simple-scan gnome-calculator gnome-contacts rhythmbox \
                                      gnome-themes-extra gnome-shell-extension-appindicator gnome-calendar deja-dup \
                                      nautilus-image-converter nautilus-sendto nautilus-share \
                                      remmina libsass parallel sassc gtk-engine-murrine fd gedit gstreamer gst-libav \
                                      gnome-mahjongg gnome-weather obsidian-icon-theme papirus-icon-theme geary gvfs gvfs-nfs gvfs-smb gvfs-goa evince yelp \
                                      gst-plugins-good gst-plugin-pipewire

  aurinst ttf-roboto-slab
  aurinst pop-icon-theme-git
  aurinst pop-gtk-theme-git
  aurinst pop-fonts
  aurinst pop-theme
  #aurinst gnome-shell-extension-pop-shell-git
  aurinst gnome-shell-extension-no-overview
  aurinst gnome-shell-extension-dash-to-dock
  #aurinst gnome-shell-extension-desktop-icons-ng
  aurinst gnome-shell-extension-gsconnect

  gsettings set org.gnome.desktop.interface gtk-theme Adwaita-dark
  gsettings set org.gnome.desktop.interface enable-hot-corners false
  gsettings set org.gnome.desktop.interface icon-theme 'Pop'
  gsettings set org.gnome.desktop.interface clock-show-seconds true
  gsettings set org.gnome.desktop.interface clock-show-date true
  gsettings set org.gnome.desktop.interface show-battery-percentage true
  gsettings set org.gnome.desktop.interface font-name "Fira Sans Book 10"
  gsettings set org.gnome.desktop.interface monospace-font-name "Fira Mono Regular 11"
  gsettings set org.gnome.desktop.interface document-font-name "Roboto Slab Regular 11"
  gsettings set org.gnome.desktop.peripherals.mouse natural-scroll true
  gsettings set org.gnome.desktop.peripherals.touchpad natural-scroll true
  gsettings set org.gnome.settings-daemon.plugins.media-keys www "['<Super>b']"
  gsettings set org.gnome.settings-daemon.plugins.media-keys home "['<Super>f']"
  gsettings set org.gnome.settings-daemon.plugins.media-keys screensaver "['<Super>l']"
  gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/']"
  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ name "Terminal"
  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ command "/usr/bin/gnome-terminal"
  gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/ binding '"<Super>Return"'

  sudo systemctl enable gdm.service

  # Gnome shell extensions
  gnome-extensions enable apps-menu@gnome-shell-extensions.gcampax.github.com
  gnome-extensions enable no-overview@fthx
  gnome-extensions enable user-theme@gnome-shell-extensions.gcampax.github.com
  #gnome-extensions enable workspace-indicator@gnome-shell-extensions.gcampax.github.com
  gnome-extensions enable appindicatorsupport@rgcjonas.gmail.com
  gnome-extensions disable dash-to-dock@micxgx.gmail.com
  gnome-extensions enable apps-menu@gnome-shell-extensions.gcampax.github.com
  gsettings set org.gnome.shell disable-user-extensions false
  gsettings set org.gnome.shell.extensions.dash-to-dock custom-theme-shrink true
  gsettings set org.gnome.shell.extensions.dash-to-dock dock-fixed true
  gsettings set org.gnome.shell.extensions.user-theme name 'Pop'
  gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'
  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-1 '["<super>1"]'
  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-2 '["<super>2"]'
  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-3 '["<super>3"]'
  gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-4 '["<super>4"]'
  gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-1 '["<Shift><Super>exclam"]'
  gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-2 '["<Shift><Super>at"]'

## Gnome Terminal profile
  echo "[/]
default='8480d7e5-775a-4275-94ba-2a1b07c352f9'
list=['b1dcc9dd-5262-4d8d-a863-c897e6d979b9', '8480d7e5-775a-4275-94ba-2a1b07c352f9']

[:8480d7e5-775a-4275-94ba-2a1b07c352f9]
background-color='rgb(0,0,0)'
font='IBM Plex Mono 12'
foreground-color='rgb(255,255,255)'
palette=['rgb(0,0,0)', 'rgb(205,0,0)', 'rgb(0,205,0)', 'rgb(205,205,0)', 'rgb(0,0,238)', 'rgb(205,0,205)', 'rgb(0,205,205)', 'rgb(229,229,229)', 'rgb(127,127,127)', 'rgb(255,0,0)', 'rgb(0,255,0)', 'rgb(255,255,0)', 'rgb(92,92,255)', 'rgb(255,0,255)', 'rgb(0,255,255)', 'rgb(255,255,255)']
use-system-font=false
use-theme-colors=false
visible-name='dev1'

[:b1dcc9dd-5262-4d8d-a863-c897e6d979b9]
use-system-font=true" > /tmp/terminal.ini

  dconf load /org/gnome/terminal/legacy/profiles:/ < /tmp/terminal.ini
fi

#### End of Gnome Install


### KDE Install ###
if [ "$1" == "kde" ]; then
  echo "INSTALLING $1"
  ## Base KDE Packages

  sudo pacman -S --noconfirm --needed sddm plasma-desktop konsole dolphin dolphin-plugins

  sudo pacman -S --noconfirm --needed baloo kmix kate kcalc kdeconnect kmail kompare krdc krfb \
                                      kwalletmanager okular partitionmanager spectacle bluedevil plasma-workspace-wallpapers kscreen bluedevil \
                                      powerdevil plasma-nm discover deepin-wallpapers-plasma kdeplasma-addons kinfocenter oxygen plasma-disks 
  sudo systemctl enable sddm.service
fi


if [ "$1" == "i3" ]; then
  echo "INSTALLING $1"
  sudo pacman -S --noconfirm --needed i3-wm i3lock i3status
fi

if [ "$1" == "awesome" ]; then
  echo "INSTALLING $1"
  sudo pacman -S --noconfirm --needed awesome gdm
fi

if [ "$2" == "Y" ]; then
  aurinst optimus-manager
  aurinst gdm-prime
  sudo systemctl enable gdm
  sudo systemctl enable --now optimus-manager
  # Disable Wayland
  sudo sed -i 's/\#WaylandEnable\=false/WaylandEnable=false/g' /etc/gdm/custom.conf
fi

sudo flatpak install -y flathub \
	spotify \
	slack \
	cheese \
	app/org.videolan.VLC/x86_64/stable \
	app/io.github.Hexchat/x86_64/stable \
	com.obsproject.Studio \
	com.valvesoftware.Steam \
	im.riot.Riot \
	org.telegram.desktop \
	org.telegram.desktop.webview \
	com.bitwarden.desktop

sudo chown gary:gary /tmp/aur

### Install some applications from the AUR
aurinst google-chrome
aurinst sublime-text-4


export GCLOUD_VER=419.0.0
cd /tmp && curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-${GCLOUD_VER}-linux-x86_64.tar.gz && \
	sudo rm -rf /opt/google-cloud-sdk && \
	tar -xf google-cloud-cli-${GCLOUD_VER}-linux-x86_64.tar.gz && sudo mv /tmp/google-cloud-sdk /opt
